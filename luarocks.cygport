NAME="luarocks"
VERSION=3.7.0p4
RELEASE=1
CATEGORY="Lua"
SUMMARY="A package manager for Lua modules"
DESCRIPTION="\
LuaRocks is the package manager for Lua modules. It allows you to create
and install Lua modules as self-contained packages called rocks.
"
HOMEPAGE="https://luarocks.org/"

GIT_REPO="https://github.com/luarocks/luarocks"
declare -A GIT_DATEHASH_BY_NAME=(
  # git log --date=iso-strict --format='%cd/%H' -1
  [3.7.0p4]=2021-05-10T15:16:31-03:00/7e6bfb6d8c1d45d62ceb4bbe8e89a184d4c96ffb
  [3.7.0]=2021-04-13T18:53:35-03:00/v3.7.0
  [3.6.0]=2021-03-30T15:03:57-03:00/v3.6.0
  [3.5.0]=2020-12-10T13:03:20-03:00/v3.5.0
)
REV_HASH="${GIT_DATEHASH_BY_NAME[${VERSION}]#*/}"
REV_DATE="${GIT_DATEHASH_BY_NAME[${VERSION}]%%/*}"
REV_DATE_SHORT="${REV_DATE%%T*}"
GIT_BASENAME="${GIT_REPO##*/}"
SRC_URI="${GIT_REPO}/archive/${REV_HASH}/${GIT_BASENAME}-${VERSION}.tar.gz"
SRC_DIR="${GIT_BASENAME}-${REV_HASH#v}"

ARCH="noarch"

################################
LUA_VERSIONS="5.3:5.4"
LUA_PKG_NAME="luarocks"
source lua.experiment

################################
## Patch files
################################
# Patch filenames are in a default style of 'git format-patch'
PATCH_URI=$(\
  find -maxdepth 1 -type f -name '[0-9][0-9][0-9][0-9]-*.patch' \
  | sort \
)
# Additional patches, if any
PATCH_URI+="
  3.5.0-build-builtin.patch
  3.5.0-core-cfg.patch
  3.5.0-path.patch
"

################################
## Requirements for building
################################
BUILD_REQUIRES="\
  lua53-devel lua53-luasec lua53-luasec lua53-socket\
  lua54-devel lua54-luasec lua54-luasec lua54-socket\
"
# TEST_REQUIRES="\
# "

################################
ABI=0


################################
_CYGPORT_RESTRICT_postinst_doc_=1

set_packages_lua() {
  __add_pkg "lua${LUA_VERSION_CYG}-${LUA_PKG_NAME}"
  __set_pkg_property . CONTENTS "
    usr/share/doc/lua${LUA_VERSION_CYG}-*
    usr/*/lua/${LUA_VERSION}/
  "
  __set_pkg_property . REQUIRES "lua${LUA_VERSION_CYG}-devel"

  __append_pkg_property . CONTENTS "
    usr/bin/*-${LUA_VERSION}
    etc/p*/lua${LUA_VERSION_CYG}-${LUA_PKG_NAME}.sh
    etc/luarocks/config-${LUA_VERSION}.lua
  "
}

set_packages_lua_versions ${LUA_VERSIONS} ${LUA_PKG_NAME}

################################
src_compile_lua() {
  mkdir -p ${B}/${LUA_VERSION}
  cd  ${B}/${LUA_VERSION}

  cpdirs ${S} .
  ./configure \
    --prefix=/usr \
    --rocks-tree=/usr \
    --lua-version=${LUA_VERSION} \
    --with-lua-include=${LUA_INCLUDEDIR} \
    --with-lua-interpreter=lua${LUA_VERSION} \
  ;
  cygmake

  # echo "local_by_default = true" >> build/config-${LUA_VERSION}.lua
}

################################
src_install_lua() {
  cd ${B}/${LUA_VERSION}

  cyginstall
  mv ${D}/usr/bin/luarocks{,-${LUA_VERSION}}
  mv ${D}/usr/bin/luarocks-admin{,-${LUA_VERSION}}

  dodoc COPYING *.md *.rockspec

  # postinstall/preremove scripts setting alternatives
  local POSTINSTALL=./postinstall/lua${LUA_VERSION_CYG}-${LUA_PKG_NAME}.sh
  local PREREMOVE=./preremove/lua${LUA_VERSION_CYG}-${LUA_PKG_NAME}.sh

  mkdir -p ./postinstall
  mkdir -p ./preremove

  __script_postinstall_lua ${LUA_VERSION} ${LUA_PKG_NAME} <<_EOF > ${POSTINSTALL}
--slave /usr/bin/luarocks luarocks /usr/bin/luarocks-\${LUA_VERSION} \\
--slave /usr/bin/luarocks-admin luarocks-admin /usr/bin/luarocks-admin-\${LUA_VERSION} \\
_EOF
  __script_preremove_lua ${LUA_VERSION} ${LUA_PKG_NAME} > ${PREREMOVE}

  insinto /etc/postinstall
  doins ${POSTINSTALL}
  insinto /etc/preremove
  doins ${PREREMOVE}
}

################################
src_test_lua() {
  cd ${B}/${LUA_VERSION}

  cd src
  echo /usr/bin/luarocks-${LUA_VERSION}
  ${D}/usr/bin/luarocks-${LUA_VERSION}
  echo /usr/bin/luarocks-admin-${LUA_VERSION}
  ${D}/usr/bin/luarocks-admin-${LUA_VERSION}
}

################################
